= render "home/header/header", {namePage: "contenter_materials_new", titlePage: "Создание материала", btnBack: true, backUrl: "/contenter/courses"}
- course = params[:id] == "new" ? Course.new : Course.find(params[:id])
- course.type_course = "material"
= render "contenter/courses/edit/right_bar/tags", {course: course}
= render "contenter/courses/edit/right_bar/categories", {course: course}
= render "contenter/courses/edit/right_bar/leadings", {course: course}
= javascript_include_tag "/tinymce/tinymce.min.js"
= javascript_include_tag "/tinymce/contenter_start.js"
- attachment = course.attachments.present? ? course.attachments.last : course.attachments.new
- att_id = attachment.id.present? ? attachment.id : "new"
.contenter#materialEditContenter
  form.upload_teaser_material
    input name='file' data-id=course.id type="file" accept="image/*" id="fileTeaserImgForm_#{course.id}"
  form.course__description-content.oh__nihuyase-block.js_courseContenter.form_edit data-id=att_id
    input type="hidden" name="course[id]" value=params[:id]
    input type="hidden" name="course[user_id]" value=current_user.id
    input#typeCourseInputVal type="hidden" name="course[type_course]" value=course.type_course
    .course__info
      .form_group.detail__info.validateFormCourse
        .title
          input.courseTitle.js_onChangeEditCourse.js_validateCourseTitle placeholder="Введите название материала" name="course[title]" value=course.title
        .description
          textarea.js_onChangeEditCourse.js_validateCourseTitle placeholder="Введите описание материала" name="course[description]" data-autoresize=""
            = course.description

      .itemDetailInfo.material_teaser
        - teaser = course.teaser
        - class_btn = teaser.present? ? "hide" : ""
        - class_prev = teaser.present? ? "" : "hide"
        - attachment_teaser = teaser.attachment rescue nil
        .btn.btn-flat.js_openFormUploadTeaser class=class_btn Добавить обложку
        .image__prv.prev_teaser class=class_prev
          .title Обложка материала
          .item
            .image
              img src=(attachment_teaser.file.url rescue nil)
            .info
              .title
                span = attachment_teaser.file_name rescue nil
                i.icon.del.js_deleteTeaserMaterial data-id=course.id
              .weight #{attachment_teaser.file.size rescue nil} байт

      .itemDetailInfo.validateCourseCategories.validateFormCourse
        .description__Item
          .allCategoriesDescriptionCourse
            - course.bunch_categories.each do |bunch_category|
              - category = bunch_category.category
              .category
                = category.title
                .remove.js_removeBunchCategoryFromCourse data-id=category.id
          .addCategory.js_clickFromCreateCourseContenter
            .btn.btn-flat.js_openLeftSideBar data-id="js-course-categories" ИЗМЕНИТЬ КАТЕГОРИЮ
        .description__Item
          .allTagDescriptionCourse
            - course.bunch_tags.each do |bunch_tag|
              - tag = bunch_tag.tag
              .tag
                = tag.title
                .remove.js_removeBunchTagFromCourse data-id=tag.id


          .addTag.js_clickFromCreateCourseContenter
            .btn.btn-flat.js_openLeftSideBar data-id="js-course-tags" ДОБАВИТЬ ТЕГ

      .itemDetailInfo
        - valid_arr = ["description", "webinar", "test", "video"]
        - vaft = attachment.file_type
        .upload_attachments style=((attachment.file.file.present? || valid_arr.include?(vaft)) ? "display:none;" : "" )
          input.uploadFileInput type="file" id="inputFile_#{att_id}" name="attachment[file]" data-type="file"
          input.validateAttachmentFileType type="hidden" value=attachment.file_type
          input type="hidden" name="attachment[attachmentable_type]" value="Course"
          input type="hidden" name="attachment[attachmentable_id]" value=params[:id]
          - unless attachment.file.file.present? || ["description", "test", "webinar", "video"].include?(attachment.file_type)
            .selectAttachment.js_setAttachmentType data-id=att_id data-type="description"
              i.icon.text
              .selectText Написать текст

            /- add_class = attachment.file_type == "video" ? "active" : ""
            /.selectAttachment.js_setAttachmentType onclick="openInputFile('inputFile_#{att_id}', 'video/*')" class=add_class data-type="video" data-id=att_id
            /  i.icon.video
            /  .selectText Вставить видео

            .selectAttachment.js_setAttachmentType data-id=att_id data-type="video"
              i.icon.video
              .selectText Вставить видео

            - add_class = attachment.file_type == "audio" ? "active" : ""
            .selectAttachment.js_setAttachmentType onclick="openInputFile('inputFile_#{att_id}', 'audio/*')" class=add_class data-type="audio" data-id=att_id
              i.icon.audio
              .selectText Вставить аудио

            - add_class = attachment.file_type == "pdf" ? "active" : ""
            .selectAttachment.js_setAttachmentType onclick="openInputFile('inputFile_#{att_id}', 'application/pdf')" data-type="pdf" data-id=att_id
              i.icon.courses
              .selectText Вставить PDF

            - add_class = attachment.download ? "active" : ""
            .selectAttachment.js_setAttachmentType onclick="openInputFile('inputFile_#{att_id}', '')" data-type="download" data-id=att_id class=add_class
              i.icon.add
              .selectText Прикрепить файл для скачивания

            .selectAttachment.js_setAttachmentType.js_createAttachmentTest data-id=att_id data-type="test"
              i.icon.test
              .selectText Добавить тест

        .editFileUpload.includeValidateForm data-validate="present_file"
          .addedTxtDescription.itemFile data-type="description" class=(attachment.file_type == "description" ? "attachmentShow" : "")
            textarea.js_includeTiny.js_onChangeEditAttachment name="attachment[full_text]"
              = attachment.full_text
          .addedTxtDescription.itemFile.addedFileInfo data-type="video" class=(attachment.file_type == "video" ? "attachmentShow" : "")
            .fileDuration
              .titleDuration Продолжительность материала в минутах
              input.inputDuration.js_onChangeEditAttachment placeholder="0" name="attachment[duration]" value=attachment.duration
            textarea.js_onChangeEditAttachment name="attachment[embed_video]" style="width:100%; height: 100px;"
              = attachment.embed_video
          .addedFileInfo.itemFile data-type="file" class=( (attachment.file_type != "description" && attachment.file.file.present?) ? "attachmentShow" : "")
            .fileInfo onclick="openInputFile('inputFile_#{attachment.id}', '#{attachment.uploadType}')"
              .titleName = (attachment.file.file.original_filename rescue "Без имени")
              .fileType
                i.icon.content class=attachment.class_type
            /.fileDuration
            /  .titleDuration Продолжительность материала в минутах
            /  input.inputDuration.js_onChangeEditAttachment placeholder="0" name="attachment[duration]" value=attachment.duration
            /
          .addedTest.itemFile data-type="test" class=(attachment.file_type == "test" ? "attachmentShow" : "")
            - if attachment.test.present?
              = render "contenter/courses/program/test", {test: attachment.test}
