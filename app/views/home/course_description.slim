= render "home/header/header", {namePage: "other_white", titlePage: @course.title}
= render "home/course_description/teaser"
- course_bunch_tags = @course.bunch_tags
- bunch_course = current_user.bunch_courses.where({course_id: @course.id, model_type: ['user', 'group']}).last rescue nil

- if @course.announcement?
  - if @current_user.present?
    = render "home/course_description/popup/notify"
  - else
    = render "home/course_description/popup/notify_me"
  = render "home/course_description/popup/notify_next"

.course__description-content.oh__nihuyase-block
  - course_title = @course.paid ? @course.title.to_s : @course.title.to_s + ' (бесплатный)'

  = render "home/course_description/anonce_block_action", {bunch_course: bunch_course}

  .course__title = course_title
  = render "home/course_description/progress_block", {bunch_course: bunch_course}
  .course__info

    - if @course.online?
      - att_public = current_user.present? ? [true, false] : true
      - all_webinars = @course.sections.attachments.where(public: att_public).webinars
      - if all_webinars.present?
        - first_webinar = all_webinars.order("date_start ASC").first
        - last_webinar = all_webinars.order("date_start ASC").last
        - if first_webinar.present?
          .webinar__date
            - last_webinar_date = ''
            - unless last_webinar.id == first_webinar.id
              - last_webinar_date = " — #{ltime(last_webinar.date_start, '', 'short_date', false)}"
            .webinar__day #{ltime(first_webinar.date_start, '', 'short_date', false)}#{last_webinar_date}
            /.webinar__calendar
              | Добавить в:
              a href="#" iCal
              |,
              a href="#" Google Calendar

    .adaptive__title
      .left-col style="height: 56px;"
        .item
          - section_count = @course.sections.count
          = rus_case(section_count, "раздел", "раздела", "разделов")
          i.courses.icon
        /.item
        /  - duration = (@course.full_duration.to_i rescue 0)
        /  = rus_case(duration, "час", "часа", "часов")
        /  i.duration.icon
        .item
          - audiences = (@course.bunch_courses.count rescue 0)
          = rus_case(audiences, "слушатель", "слушателя", "слушателей")
          i.groups.icon
      .right-col
        - course_bunch_tags.each do |bunch_tag|
          - tag = bunch_tag.tag
          .item = tag.title
    - in_study = current_user.bunch_courses.where(course_id: @course.id).in_study rescue nil
    .detail__info class = "#{'is__closed' unless in_study.present?}"
      .description
        = raw truncate(@course.description, length: 1000, separator: ' ', omission: ' ...' )
    .detail__info class = "#{'is__closed' if in_study.present?}"
      .description
        = raw @course.description
      - leadings = @course.ligament_leads
      .leading__list
        .title Ведущий курса
        - leadings.each do |lead|
          - leading = lead.user
          - if leading.present?
            .item
              .ava
                img src=default_img(leading.avatar)
              .info
                .title = leading.full_name
                .description = leading.about_me
    - if in_study.present?
      .more.is__closed
        .btn.btn-flat.for__closed Показать описание
        .btn.btn-flat.for__open Скрыть описание

  - ya_class = ( (current_user.bunch_courses.where(course_id: @course.id).present? && !in_study.present?) rescue false) ? 'ya_course_begin' : ''
  .study__program
    .title Учебная программа
    .prgr-wrp
      - nsec = 0
      - if bunch_course.present?
        - all_sections = bunch_course.bunch_sections
      - @course.sections.not_empty.each do |section|
        - section_attachments = section.attachments.not_empty
        - if section_attachments.present?
          - natt = 0
          - if bunch_course.present?
            - bunch_section = all_sections.where(section_id: section.id).last
          / - add_class_section = !current_user.present? ? (section.attachments.where(public: true).present? ? "" : "is__shot") : ""
          .programm__block
            .adaptive__title
              .left-col #{nsec += 1}. #{section.title}
              - if (current_user.director? rescue false)
                - if bunch_section.present? && (!bunch_section.complete rescue false) && (bunch_course.model_type == "group")
                  .right-col class=((date_complete < current_time ? "overdue" : "") rescue nil) #{ltime(bunch_section.date_complete, "Завершить до ", 'short_min', false)}
                  .edit-menu.js__select-calendar
                    .edit-date href="#"
                      i.icon-uniE8A3
                    .hidden-calendar-wrp
                      .hidden-calendar
                        .calendar-header
                          .back.icon
                          |Выбор даты
                        .calendar-holder
                          .selected-value  Выберите дату
                          .datapicker__trigger
                      ul.hidden-list
                        li.datapicker__trigger.js_actionBtn
                          |Перенести дату окончания раздела
                          - ts = "Дата оканчания раздела изменена"
                          input.datapicker__trigger.js__set-date.js_changeDateToDatePicker.hiddenInputDataPicker.js_changeDeadLineSectionMy{
                            data-section_id=bunch_section.id data-text=ts data-no_schedule="true"
                          }
              - unless current_user.present?
                .right-col
                  i.icon.to__unfold.ckick_shot
            .programm__wrp
              /TODO Переписать все нахрен
              - section_attachments.each do |attachment|
                - bunch_attachment = (bunch_section.bunch_attachments.where(attachment_id: attachment.id).last rescue nil)
                - class_block = bunch_attachment.present? ? (bunch_attachment.complete ? "is__completed" : "" ) : ""
                - class_add_course = "js_goToAttachment "
                - class_add_course += "js_addCourseToMyCourse" if current_user.present?
                - redirect_att = "/attachment?id=#{attachment.id}"
                form data-redirect=(redirect_att rescue nil) data-alert="false"
                  - if current_user.present?
                    input type="hidden" name="course_id" value=@course.id
                  / - ad__active = class_block_attachment(attachment)
                  - ya_class = ((attachment.file_type == 'video') ? 'ya_see_video' : '')
                  - class_item = ("#{class_block} #{ya_class} #{class_add_course} #{ya_class}").split(" ").join(" ")
                  .item.js_blockAttachmentInProgram data-id=attachment.id class=class_item
                    .icon__block
                      i.icon class=(attachment.file_type == 'vimeo' ? 'video' : attachment.class_type)
                    .adaptive__title
                      .left-col #{nsec}.#{natt += 1} #{attachment.title}
                      .right-col = attachment.full_duration
                    .description = attachment.description
      - final_test = @course.test
      - if final_test.present?
        - hash_class ={}
        - if (bunch_course.complete rescue false) && (current_user.view_course?(@course) rescue false)
          - hash_class = {onclick: "window.location.href = '/tests/#{final_test.id}/run'"}
          - class_block = final_test.test_results.where(user_id: current_user.id).count > 0 ? "is__completed" : ""
        .programm__block.finalTest *hash_class
          .item class=(class_block rescue '')
            .icon__block
              i.icon.test
            .adaptive__title
              .left-col Тест для завершения курса
              .right-col
            .description Станет доступным после прохождения всех материалов курса


/ - h = "Получайте полезные знания вместе с #{$env_mode.name_title}"
/ - i = "Зарегистрируйтесь в системе и получите доступ к библиотеке #{$env_mode.name_title}"
/ = render "common/course/course_reg", {header: h, info: i}

= render "home/course_program/sink_button", {course: @course}

= render "common/social_buttons", {url: @course.url} if !$env_mode.dev?