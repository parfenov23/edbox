= render "home/header/header", {namePage: "members", titlePage: "Мои сотрудники"}
.content.inner-content#groups
  / .js__multi__action.multi__choice
  /   .title.h__text_20-24
  /     .js_editTitleDestroyMember 1
  /     span.js__tooltip.js_closeDestroySelectMember
  /       i.icon
  /       .tooltip.is__bottom Отменить
  /   .action__block
  /     .btn.btn-flat.is__blue.js_removeUser УДАЛИТЬ
  - if @members.present?
    - text_title = "Добавлено #{rus_case(@members.count, 'сотрудник', 'сотрудника', 'сотрудников')}"
    .members__title.h__text_15-24 = text_title
  / - else
  /   .members
  /     .title Чтобы добавить участника, введите его email и отправьте приглашение.
  / - count_residue_users = current_user.company.residue_users
  / - if current_user.director? && count_residue_users <= 0
  /   .tarif__is_full
  /     span Вы пригласили максимальное количество пользователей согласно вашему тарифу
      /.btn.is__blue ИЗМЕНИТЬ ТАРИФ
  / .container
  /   .members
  /     .members__invite
  /       ul.invited
  /       form.form
  /         input.input.showResidueUsers type="text" placeholder="Введите адрес эллектронной почты сотрудника через пробел и нажмите «Отправить»"
  /         .plane.js_inviteUser.js__tooltip
  /           .qty__left
  /             'Осталось
  /             span.count_residue_users data-count=count_residue_users 10 приглашений
  /           .tooltip.is__bottom Отправить приглашение пользователям

  .members.container
    - if @members.present?
      ul.members__in_system class="#{current_user.director ? 'director' : ''}"
        - @members.each do |member|
          li.members__in_system-item
            .ava.icon
              img src=default_img(member.avatar)
            .name.h__text_15-24 = member.full_name
            .email.h__text_15-24 = member.email
            .status
              / - all_bunch_groups = member.bunch_groups
              / - count_groups = all_bunch_groups.count
              / - if count_groups > 0
              /   ul.tooltip__list
              /     - all_bunch_groups.each do |bunch_group|
              /       - group = bunch_group.group
              /       li.h__text_16-12 = group.first_name
              .send Мои сотрудники
              / // .overdue
              / - if member.auth? || !member.last_auth.present?
              /   - if count_groups > 0
              /     .send Состоит в #{rus_case(count_groups, "группе", "группах", "группах")}
              /   - else
              /     .send Не состоит в группах
              / - else
              /   .send.h__text_15-24 Отправленно #{time_ago_in_words(member.last_auth)} назад
